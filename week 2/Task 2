Task 2:
Processor Speed (Instructions Per Second)
Number of instructions the processor can execute per second is called as processor speed.
Slow processor -  takes more time to execute(longer execution time)
Faster processor - takes less time to execute(lesser execution time)
Processor speed is the rate at which a CPU can execute instructions, usually measured in GHz or Instructions Per Second (IPS).
Time command:
real: Total time from start to end (including everything(os operations, I/O,...).
user: Time spent by CPU doing program work (like the loop(only calculates the calculation time)).
sys: Time spent by CPU doing OS services to help the program(resource allocation, file access).


Lab:

1. Write a C program that performs a large number of simple arithmetic operations (e.g., addition, multiplication) in a loop.
Ans:
#include<stdio.h>
int main(){
double fact=1;
for(int i=1;i<10;i++){ fact = fact+i; }
printf("%lf",fact);}
Output: time ./task2
46.000000
real	0m0.004s
user	0m0.003s
sys	0m0.001s


2. Use the time command to measure the execution time of your program.
Ans:
For the above program
Command -> time ./task2
Output : in READme.md
Modify the program to perform more complex operations or increase the loop iterations.
Ans:
 	#include<stdio.h>
int main(){
double fact=1;
for(long long i=100000000;i>0;i--)
{
fact += (fact*i)/1.0000001;
}
printf("%lf",fact);
}
Output: command: time ./task2
inf
real	0m0.698s
user	0m0.685s
sys	0m0.009s


3. Measure the new execution time and discuss how the processor's speed affects the overall performance.
Ans:
If the calculation becomes more complex, the processor needs more time per instruction, so overall performance decreases (it feels slower).
If the calculation becomes more complex, the processor needs more time per instruction, so overall performance decreases (it feels slower).
Processor speed (clock speed) itself does not decrease or increase — it stays the same —but the time taken to complete your program changes based on the complexity of the operations.
 	

4.Research and explain CPU clock cycles, and how that relates to instructions per second.

Clock speed- How many clock cycles happen one second.( 1sec = 1.26GHZ)
Clock Cycle -  Time taken by the cpu to complete the tiny task in the program. 
                   To complete a full program large number of clock cycles are needed.
                       eg: 
Clock cycles are used to measure the time taken for each small task in a program, like:
Addition → takes some clock cycles


Multiplication → takes some clock cycles


Printing to screen → also takes some clock cycles


Then, all these cycles together form the total execution time of your program.
Instruction per cycle(IPC): 
           How many instructions that executed per cycle is called instruction per cycle.
Instruction per second:
	Clock speed * IPC
If the clock speed is more and the IPC is more then more instructions can run in less time
one instruction can require more than one clock cycle and also in one cycle itself more than one instruction can be run.


Understanding:
Your CPU runs at 1.26 GHz clock speed.
That means 1.26 billion clock cycles happen in 1 second.
IPC = How many instructions taken place in one cycle
IPS = How many instructions that taken place per second. (clock speed*ipc)




